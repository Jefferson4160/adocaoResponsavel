/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.ifba.usuario.view;

import br.com.ifba.app.view.Main;
import br.com.ifba.infrastructure.util.StringUtil;
import br.com.ifba.usuario.controller.UsuarioIController;
import br.com.ifba.usuario.entity.Usuario;
import br.com.ifba.usuario.util.TipoAcesso;
import jakarta.annotation.PostConstruct;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.Optional;
import javax.swing.JOptionPane;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Lazy;
import org.springframework.stereotype.Component;

/**
 *
 * @author ADMIN
 */
@Component
public class Tela01IdentificacaoUsuario extends javax.swing.JFrame {
    
    
    @Autowired
    private UsuarioIController usuarioController; 
    @Autowired
    private Tela02GestaoUsuarios tela02GestaoUsuarios; 
    @Autowired
    private Tela03AdotantePerfil tela03AdotantePerfil;
    @Lazy
    @Autowired
    private Main main;
    
   public Tela01IdentificacaoUsuario() { 
        
        initComponents();
        
    }
   
    @PostConstruct 
    public void init() {
        this.setLocationRelativeTo(null); // Centraliza a janela
        this.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE); // DISPOSE_ON_CLOSE para telas que são escondidas
        
        // Quando fechar a Tela01, volta para Main
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                main.setVisible(true);
            }
        });
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblIdentificacao = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        textCpf = new javax.swing.JTextField();
        btnEntrar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblIdentificacao.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblIdentificacao.setText("IDENTIFICAÇÃO");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("CPF:");

        btnEntrar.setText("ENTRAR");
        btnEntrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEntrarActionPerformed(evt);
            }
        });

        jLabel2.setText("- Use 'admin' para teste com nível de acesso de Funcionário e Voluntário");

        jLabel3.setText("- Use '123' para teste com nível de acesso de Adotante");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(btnEntrar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(lblIdentificacao))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(textCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(lblIdentificacao)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnEntrar)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEntrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEntrarActionPerformed
        String cpf = textCpf.getText();
        
        if (StringUtil.isNullOrEmpty(cpf)) {
            JOptionPane.showMessageDialog(this, "Por favor, insira o CPF.", "Erro de Validação", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        // Login especial para CPF 123 -> Adotante
        if ("123".equals(cpf)) {
            JOptionPane.showMessageDialog(this, "Login de Adotante (CPF 123) bem-sucedido!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            this.setVisible(false);
            tela03AdotantePerfil.setVisible(true);
            return;
        }
        
        // Lógica para "admin"
        if ("admin".equalsIgnoreCase(cpf)) {
            JOptionPane.showMessageDialog(this, "Login de Administrador bem-sucedido!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            this.setVisible(false); // Esconde esta tela
            tela02GestaoUsuarios.setVisible(true); // Abre a tela de gestão de usuários
            return;
        }

        // Lógica para CPF no banco de dados
        try {
            Optional<Usuario> usuarioOpt = usuarioController.findByCpf(cpf);

            if (usuarioOpt.isPresent()) {
                Usuario usuario = usuarioOpt.get();

                if (usuario.getTipoAcesso() == TipoAcesso.FUNCIONARIO || usuario.getTipoAcesso() == TipoAcesso.VOLUNTARIO) {
                    JOptionPane.showMessageDialog(this, "Login bem-sucedido para: " + usuario.getNome() + " (" + usuario.getTipoAcesso() + ")", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                    this.setVisible(false); // Esconde esta tela
                    tela02GestaoUsuarios.setVisible(true); // Abre a tela de gestão de usuários
                } else if (usuario.getTipoAcesso() == TipoAcesso.ADOTANTE) {
                    JOptionPane.showMessageDialog(this, "Login de Adotante: " + usuario.getNome() + ". Redirecionando para tela de Perfil do Adotante.", "Login Adotante", JOptionPane.INFORMATION_MESSAGE);
                    
                    this.setVisible(false); // Esconde esta tela
                    tela03AdotantePerfil.carregarDados(usuario); // envia os dados
                    tela03AdotantePerfil.setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(this, "Tipo de acesso não reconhecido para o CPF: " + cpf + ".", "Erro de Acesso", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "CPF não encontrado no sistema.", "Erro de Login", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Erro ao tentar identificar usuário: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEntrarActionPerformed

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEntrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblIdentificacao;
    private javax.swing.JTextField textCpf;
    // End of variables declaration//GEN-END:variables

    
}
